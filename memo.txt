# dev note for "colored" command

------------------------------------------------------------------------------
  Memo
------------------------------------------------------------------------------

2016-07-20

* ls++ [from modls/memo.txt]

  類似のものを見つけた。Perl で書かれている。
  https://github.com/trapd00r/ls--

  環境変数 LS_COLORS で詳細な指定を受け付けるようにもなっている。
  (と思う。というのもこの作者は LS_COLORS も提供している:
  https://github.com/trapd00r/LS_COLORS)

  2018-07-01 他に exa (written in Rust) というものもある。

------------------------------------------------------------------------------
  ToDo
------------------------------------------------------------------------------

2016-09-15

* diff3 の着色

  マージに関する hank の時には元になるファイルが二つあって、
  結果が一つ存在する。この時 hank header が
  @@@ .... @@@
  という形になって、内容の各行は 1 文字目が一つ目のファイルからの変更で、
  2 文字目が二つ目のファイルからの変更で、それ以降が行の内容という形になっている。
  前回の hank header の種類を記録しておいてそれに応じて差分業の特定の仕方を切り替えられる様にする。
  またどの様な種類の行があるかについて可能性を調べておく。
  merge conflict 時に見た時には次の5種類が見られた: "  " 変更なし, " -", " +", "- ", "+ "

2016-09-07

* diff: 単語ごとの diff?

  単語ごとに区切ってから diff をするのを実装してみたが、思う様に行かない。
  単語の skip に対するコストが小さすぎる。

  現在の実装では単語を /[_[:alnum:]]+|[[:blank:]]+|./ にしている。
  例えば "hello++" は "hello" "+" "+" に分割される。
  ここで diff "hello++" vs "++hello" を考えると、
  「hello が先頭から消されて hello が末尾に追加された」という結果になる。
  その方が変更される単語の数が少なくなるからである。
  しかし文字数にして考えてみれば "++" を消して "++" を追加した方が自然である。

  これを解決するためには、

  a. 以前通り文字ごとの diff でありながら compare を工夫する
    これだと、計算時間の短縮にはならないだろう。

  b. 矢張り単語ごとの diff にするが、重み付きの diff を可能にする。

    重みに対応するとなると単に p が少なければ良いという訳ではないので、
    ループの回し方を考えなおす必要がある。
    更に yskip の重みと xskip の重みも異なる事に注意する。


------------------------------------------------------------------------------
  Done
------------------------------------------------------------------------------

2017-03-07

* diff: Cygwin で std::runtime_error が出る。

  g++ でも clang++ でも同様にエラーになる。
  原因は cygwin 上の libstdc++ が std::locale("") 対応していない事だった。
  これは規格 22.3.1.2/6 に反している気がする。
  Gist にした: https://gist.github.com/akinomyoga/18185db4ac1dcf9b6dfd518571ab25a6

  取り敢えず std::wcout std::wcin に imbue しないでも動いているので
  Cygwin では std::locale("") を実行しない様にして様子を見る。

2016-09-16

* diff: bug 一文字余分に消して追加するという結果になっている。[2016-09-15]

  例えば以下のような変更に対して差分を適用すると、

  % 何故か一文字だけ余分に消して追加するという形になってしまう。
  % 
  % -hello world
  % +hello

  試してみたら上記の例だと正しく着色される様だ。

  以下のコマンドで誤りが確認できる$ printf '%s\n' {-,+}'hello' | ./diff
  二つの行は何らの違いもない筈であるが、実際には先頭の h が削除されて
  h が挿入されたという編集として着色されてしまう。

  アルゴリズムの側に誤りがあると思われるが、
  そうではなくて着色の側に誤りがある可能性もある。

  具体的に出力をしてみる事にする。
  | path.size = 1
  | path[] = (1, 1)
  | -hello
  | +hello

  成る程、確かに path の内容が誤っている。
  それでは比較演算子は期待する結果を返しているだろうか。

  | 1-----
  | -1----
  | --11--
  | --11--
  | ----1-
  | -----1

  OK。期待した結果だ。という事はやはり _ldiff_getpath_wu の中に問題がある。
  見ると p=0 q=0 m=0 ならばちゃんと一番初めの文字から一致が確認されて 0 が代入される様に見える。
  と、問題を見つけた q を回す範囲が誤っている。+1 する (もしくは q <= qM にしても良かった)。

